{"language":"asp","engine":"dlv2","executor":"embAspServerExecutor","option":[{"name":"free choice","value":["--filter=inExcessRel/3,absentRel/3,absentComponent/2,inExcessComponent/2,"]}],"runAuto":"on","tabname":["L P 1","L P 2","L P 3"],"program":["net(\"17\",1,152,107,244,118). \r\nnet(\"20\",2,165,165,184,209). \r\nnet(\"18\",3,105,157,120,205). \r\nnet(\"19\",4,131,153,147,208). \r\nnet(\"14\",5,138,94,146,123). \r\nnet(\"19\",6,147,152,162,211). \r\nnet(\"18\",7,120,154,131,201). \r\nnet(\"22\",8,203,161,225,210). \r\nnet(\"16\",9,153,106,158,123). \r\nnet(\"23\",10,226,175,246,199). \r\nnet(\"13\",11,123,99,138,112). \r\nnet(\"21\",12,185,174,201,199). \r\nnet(\"15\",13,147,101,152,120). \r\nnet(\"24\",14,256,210,275,224). \r\nnet(\"25\",15,251,148,260,185). \r\nnet(\"13\",16,112,101,125,112). \r\nnet(\"25\",17,262,150,271,183). \r\n","cad(\"13\", 1, 345, 132, 388, 208).\r\ncad(\"18\", 7, 344, 294, 384, 477).\r\ncad(\"18\", 8, 386, 292, 422, 479).\r\ncad(\"13\", 2, 393, 132, 428, 206).\r\ncad(\"19\", 9, 427, 289, 464, 480).\r\ncad(\"14\", 3, 429, 124, 453, 218).\r\ncad(\"15\", 4, 458, 147, 468, 207).\r\ncad(\"19\", 10, 466, 294, 504, 480).\r\ncad(\"16\", 5, 472, 145, 489, 204).\r\ncad(\"17\", 6, 493, 137, 749, 204).\r\ncad(\"20\", 11, 515, 345, 571, 459).\r\ncad(\"21\", 12, 575, 361, 612, 449).\r\ncad(\"22\", 13, 619, 340, 674, 468).\r\ncad(\"23\", 14, 682, 358, 741, 449).\r\ncad(\"24\", 15, 759, 450, 812, 504).\r\ncad(\"25\", 16, 766, 288, 785, 399).\r\ncad(\"25\", 17, 796, 287, 814, 404).\r\n","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n%intersections along vertical axis or horizontal axis\r\ninLevelNet(C1, ID1, C2, ID2, horizontal) :-     net(C1, ID1, Xs1, Ys1, Xd1, Yd1),\r\n                                                net(C2, ID2, Xs2, Ys2, Xd2, Yd2),\r\n                                                ID1 <> ID2,\r\n                                                Ys1 <= Yd2, Yd1 >= Ys2.\r\n\r\ninLevelNet(C1, ID1, C2, ID2, vertical) :-     net(C1, ID1, Xs1, Ys1, Xd1, Yd1),\r\n                                                net(C2, ID2, Xs2, Ys2, Xd2, Yd2),\r\n                                                ID1 <> ID2,\r\n                                                Xs1 <= Xd2, Xd1 >= Xs2.\r\n                                                \r\n                                                \r\ninLevelCad(C1, ID1, C2, ID2, horizontal) :-     cad(C1, ID1, Xs1, Ys1, Xd1, Yd1),\r\n                                                cad(C2, ID2, Xs2, Ys2, Xd2, Yd2),\r\n                                                ID1 <> ID2,\r\n                                                Ys1 <= Yd2, Yd1 >= Ys2.\r\n                                                \r\n                                                \r\ninLevelCad(C1, ID1, C2, ID2, vertical) :-     cad(C1, ID1, Xs1, Ys1, Xd1, Yd1),\r\n                                                cad(C2, ID2, Xs2, Ys2, Xd2, Yd2),\r\n                                                ID1 <> ID2,\r\n                                                Xs1 <= Xd2, Xd1 >= Xs2.                                                \r\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n%count instances of each component in cad and in net and then compare\r\n\r\ncomponent(X):- cad(X, _, _, _, _, _).\r\ncomponent(X):- net(X, _, _, _, _, _).\r\n\r\n\r\nnumInstancesCad(X,N):- component(X), #count{Id: cad(X, Id, _, _, _, _)}=N.\r\n\r\nnumInstancesNet(X,N):- component(X), #count{Id: net(X, Id, _, _, _, _)}=N.\r\n\r\n\r\nproblem(X,N_CAD,N_NET):- numInstancesCad(X,N_CAD), numInstancesNet(X,N_NET), N=N_CAD-N_NET, N!=0.\r\nabsentComponent(X,N):- numInstancesCad(X,N_CAD), numInstancesNet(X,N_NET), N=N_CAD-N_NET, N>0.\r\n\r\n\r\ninExcessComponent(X,N):- numInstancesCad(X,N_CAD), numInstancesNet(X,N_NET), N=N_NET-N_CAD, N>0.\r\n\r\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n%relation graph representation\r\n\r\nintersectionPercentage(50).\r\ndistancePercentage(20).\r\n\r\n\r\n\r\n%calcolo la dimensione di ogni componente\r\ncomponentDimensionCad(ID1,Width,Lenght):- cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), Width=Xd1-Xs1, Lenght=Yd1-Ys1.\r\ncomponentDimensionNet(ID1,Width,Lenght):- net(C1, ID1, Xs1, Ys1, Xd1, Yd1), Width=Xd1-Xs1, Lenght=Yd1-Ys1.\r\n\r\n\r\n%calcolo la dimensione della box della Cad\r\nboxCad(W,L):- #min{Xs1: cad(_,_,Xs1,_,_,_)} = K1, #max{Xs2: cad(_,_,_,_,Xs2,_)}= K2, W=K2-K1,\r\n             #min{Ys1: cad(_,_,_,Ys1,_,_)} = K3, #max{Ys2: cad(_,_,_,_,_,Ys2)}= K4, L=K4-K3.\r\n\r\nboxNet(W,L):- #min{Xs1: net(_,_,Xs1,_,_,_)} = K1, #max{Xs2: net(_,_,_,_,Xs2,_)}= K2, W=K2-K1,\r\n             #min{Ys1: net(_,_,_,Ys1,_,_)} = K3, #max{Ys2: net(_,_,_,_,_,Ys2)}= K4, L=K4-K3.\r\n\r\nintersectionThresholdCad(ID1,ID2,WT,LT):-componentDimensionCad(ID1,W1,L1),componentDimensionCad(ID2,W2,L2), intersectionPercentage(K),\r\n                                        WT=W1*K/100,LT=L1*K/100.\r\nintersectionThresholdNet(ID1,ID2,WT,LT):-componentDimensionNet(ID1,W1,L1),componentDimensionNet(ID2,W2,L2), intersectionPercentage(K),\r\n                                        WT=W1*K/100,LT=L1*K/100.\r\n\r\ndistanceThresholdCad(DW,DL):- distancePercentage(A), boxCad(W,L), DW=W*A/100,DL=L*A/100.\r\ndistanceThresholdNet(DW,DL):- distancePercentage(A), boxNet(W,L), DW=W*A/100,DL=L*A/100.\r\n\r\n%right cad\r\nrelCad(C1,ID1,C2,ID2,right,D):- cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, KX, Ys2, Xd2, Yd2), inLevelCad(_,ID1,_,ID2,horizontal),\r\n                        intersectionThresholdCad(ID1,ID2,WT,LT), #min{Xs3:cad(_,ID3,Xs3,_,_,_),inLevelCad(_,ID1,_,ID3,horizontal),Xs3>=Xd1-WT}=KX,D=KX-Xd1.\r\n\r\n%top cad\r\nrelCad(C1,ID1,C2,ID2,top,D):-cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, Xs2, Ys2, Xd2, KY), inLevelCad(_,ID1,_,ID2,vertical), \r\n                            intersectionThresholdCad(ID1,ID2,WT,LT), #max{Yd3:cad(_,ID3,_,_,_,Yd3),inLevelCad(_,ID1,_,ID3,vertical),Yd3<=Ys1+LT}=KY,D=Ys1-Ys2,\r\n                            not auxRelCad(C1,ID1,C2,ID2,right),not auxRelCad(C2,ID2,C1,ID1,right).\r\n\r\n%right net\r\nrelNet(C1,ID1,C2,ID2,right,D):- net(C1, ID1, Xs1, Ys1, Xd1, Yd1), net(C2, ID2, KX, Ys2, Xd2, Yd2), inLevelNet(_,ID1,_,ID2,horizontal),\r\n                        intersectionThresholdNet(ID1,ID2,WT,LT), #min{Xs3:net(_,ID3,Xs3,_,_,_),inLevelNet(_,ID1,_,ID3,horizontal),Xs3>=Xd1-WT}=KX,D=KX-Xd1.\r\n\r\n%top net\r\nrelNet(C1,ID1,C2,ID2,top,D):- net(C1, ID1, Xs1, Ys1, Xd1, Yd1), net(C2, ID2, Xs2, Ys2, Xd2, KY), inLevelNet(_,ID1,_,ID2,vertical), \r\n                            intersectionThresholdNet(ID1,ID2,WT,LT), #max{Yd3:net(_,ID3,_,_,_,Yd3),inLevelNet(_,ID1,_,ID3,vertical),Yd3<=Ys1+LT}=KY,D=Ys1-Ys2,\r\n                            not auxRelNet(C1,ID1,C2,ID2,right),not auxRelNet(C2,ID2,C1,ID1,right).\r\n\r\n\r\nauxRelNet(C1,ID1,C2,ID2,DIR):- relNet(C1,ID1,C2,ID2,DIR,D).\r\nauxRelCad(C1,ID1,C2,ID2,DIR):- relCad(C1,ID1,C2,ID2,DIR,D).\r\n\r\n%left\r\n%relCad(C1,ID1,C2,ID2):-cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, Xs2, Ys2, KX, Yd2), inLevelCad(_,ID1,_,ID2,horizontal),\r\n%                        intersectionThresholdCad(ID1,ID2,WT,LT), #max{Xd3:cad(_,_,_,_,Xd3,_),Xd3<=Xs1+WT}=KX.\r\n\r\n%down\r\n%relCad(C1,ID1,C2,ID2):-cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, Xs2, KY, Xd2, Yd2), inLevelCad(_,ID1,_,ID2,vertical),\r\n%                        intersectionThresholdCad(ID1,ID2,WT,LT), #min{Ys3:cad(_,_,_,Ys3,_,_),Ys3>=Yd1+LT}=KY.\r\n\r\n\r\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n%heuristic to reduce false positive (error relations)\r\n\r\n% considero una relazione se la distanza tra i due oggetti Ã¨ minore di una certa soglia (percentuale della grandezza del box)\r\n% considerando come origine il punto in alto a sinistra\r\n\r\nlimitedRelCad(C1,ID1,C2,ID2,D,\"right\"):- relCad(C1,ID1,C2,ID2,right,_),cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, Xs2, Ys2, Xd2, Yd2), \r\n                                D=Xs2-Xd1,distanceThresholdCad(W,L), D<W.\r\n                                \r\n\r\nlimitedRelCad(C1,ID1,C2,ID2,D,\"top\"):- relCad(C1,ID1,C2,ID2,top,_),cad(C1, ID1, Xs1, Ys1, Xd1, Yd1), cad(C2, ID2, Xs2, Ys2, Xd2, Yd2), \r\n                                D=Ys1-Ys2,distanceThresholdCad(W,L), D<L.\r\n                                \r\n\r\nlimitedRelNet(C1,ID1,C2,ID2,D,\"right\"):- relNet(C1,ID1,C2,ID2,right,_),net(C1, ID1, Xs1, Ys1, Xd1, Yd1), net(C2, ID2, Xs2, Ys2, Xd2, Yd2), \r\n                                D=Xs2-Xd1,distanceThresholdNet(W,L), D<W.\r\n                                \r\n\r\nlimitedRelNet(C1,ID1,C2,ID2,D,\"top\"):- relNet(C1,ID1,C2,ID2,top,_),net(C1, ID1, Xs1, Ys1, Xd1, Yd1), net(C2, ID2, Xs2, Ys2, Xd2, Yd2), \r\n                                D=Ys1-Ys2,distanceThresholdNet(W,L), D<L.                              \r\n                                \r\n                                \r\nnumRelations(net,N1,N2):- #count{ID1,ID2:relNet(C1,ID1,C2,ID2,DIR,_)}=N1,#count{ID1,ID2:limitedRelNet(C1,ID1,C2,ID2,DIS,_)}=N2.\r\nnumRelations(cad,N1,N2):- #count{ID1,ID2:relCad(C1,ID1,C2,ID2,DIR,_)}=N1,#count{ID1,ID2:limitedRelCad(C1,ID1,C2,ID2,DIS,_)}=N2.\r\n\r\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n%comparison between relations \r\n\r\n%Identifica le relazioni che sono presenti tra due componenti nella RETE ma non nel CAD\r\n%noRelCad(X, Id1, Y, Id2) :- not #count{X,Y : posRelCad(X, _, Y, _, _)} >= 1, posRelNet(X, Id1, Y, Id2, _).\r\n\r\n%Identifica le relazioni che sono presenti tra due componenti nel CAD ma non nella RETE\r\n%noRelNet(X, Id1, Y, Id2) :- not #count{X,Y : posRelNet(X, _, Y, _, _)} >= 1, posRelCad(X, Id1, Y, Id2, _).\r\n\r\n\r\nnumRelationsCad(C1,C2,N):- #count{ID1,ID2:limitedRelCad(C1,ID1,C2,ID2,_,_)}=N, component(C1),component(C2).\r\nnumRelationsNet(C1,C2,N):- #count{ID1,ID2:limitedRelNet(C1,ID1,C2,ID2,_,_)}=N, component(C1),component(C2).\r\n\r\nprob2(C1,C2):- numRelationsCad(C1,C2,N),numRelationsNet(C1,C2,N2), N!=N2.\r\n\r\nabsentRel(C1,C2,A):- numRelationsCad(C1,C2,N2), numRelationsNet(C1,C2,N1), A=N2-N1, A>0.\r\ninExcessRel(C1,C2,A):-numRelationsCad(C1,C2,N2), numRelationsNet(C1,C2,N1), A = N1-N2, A>0."],"output_model":"ANSWER\ninExcessRel(\"15\",\"17\",1). absentRel(\"16\",\"17\",1). absentRel(\"15\",\"16\",1).\n","output_error":"","tab":["editor1","editor2","editor3"]}